---
- name: Check if the old group exists      #check old group----
  win_command: net localgroup "{{ old_group_name }}"
  register: old_group_check
  ignore_errors: yes
  
- name: Set fact for old group existence
  set_fact:
    old_group_exists: "{{ old_group_check.rc == 0 }}"
  ### add in new code to check message
- name: Show message for old group existence 
  debug:
    msg: "Old group '{{ old_group_name }}' does not exist on the server."
  when: not old_group_exists
  
- name: Add new group 
  win_command: net localgroup "{{ new_group_name }}" /add
  when: action_type == "Add"
  register: new_group_add
  changed_when: new_group_add.rc == 0
  
  #need to add in gitlab code-------------------------------
- name: check status on new group addition
  debug:
    msg: "new group "{{ new_group_name }}"  added successfully"
  when: new_group_add.changed
  
- name: Check if the new group exists
  win_command: net localgroup "{{ new_group_name }}"
  register: new_group_check
  
- name: Set fact based on new group existence status
  set_fact:
    new_group_exists: "{{ new_group_check.rc == 0 }}"
    
- name: Delete old group
  win_command: net localgroup "{{ old_group_name }}" /delete
  when: action_type == "delete"
  register: old_group_delete
  changed_when: old_group_delete.rc == 0
  
- name: check status old group deletion
  debug:
    msg: "Old group "{{ old_group_name }}" deleted successfully"
  when: old_group_delete.changed
##report
- name: Create report data for target servers
  when: action_type == "report"
    set_fact:
      report_data: |
        {{ inventory_hostname }},{{ old_group_exists }},{{ 'Does not exist' if not old_group_exists else 'Deleted' }},{{ new_group_add.changed | default(false) }},{{ new_group_exists }}

- name: Ensure header exists at the beginning of the CSV file
  when: action_type == "report"
  elegate_to: localhost
  lineinfile:
    path: "{{ report_file_path }}"
    line: "Server Name,Old Group Exists,Old Group Deletion Status,New Group Added,New Group Exists"
    create: yes
    insertafter: BOF
    
- name: check report data for each server to the CSV file
  when: action_type == "report"
  delegate_to: localhost
  lineinfile:
    path: "{{ report_file_path }}"
    line: "{{ report_data }}"
    create: yes
    insertafter: EOF

# Send email with the report as an attachment
- name: Send report via email
  when: action_type == "report"
  mail:
    host:   # SMTP server address (change to your mail server)
    port:  # SMTP port 
    username: "your-email@example.com"  # email address
    password: "your-email-password"  # email password 
    to: "recipient@example.com"  # Recipient email address
    subject: "AD Group Naming Report"
    body: "Hello, \n\nPlease find attached the report for group actions performed on servers.
    attach:
      - "{{ report_file_path }}"  # Path to the generated CSV file
    secure: yes  # Use SSL/TLS for secure connection
  delegate_to: localhost

- name: Output report to console
  when: action_type == "report"
  debug:
    msg: "Report entry for {{ inventory_hostname }}: {{ report_data }}"
